{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\E2B\\\\frontend\\\\src\\\\screens\\\\ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detailsProduct } from '../actions/productActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nexport default function ProductEditScreen(props) {\n  _s();\n\n  const productId = props.match.params.id;\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [image, setImage] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState('');\n  const [brand, setBrand] = useState('');\n  const [description, setDescription] = useState('');\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!product || product._id !== productId) {\n      dispatch(detailsProduct(productId));\n    } else {\n      setName(product.name);\n      setPrice(product.price);\n      setImage(product.image);\n      setCategory(product.category);\n      setCountInStock(product.countInStock);\n      setBrand(product.brand);\n      setDescription(product.description);\n    }\n  }, [product, dispatch, productId]);\n\n  const submitHandler = e => {\n    e.preventDefault(); // TODO: dispatch update product\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Edit Product \", productId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"price\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"price\",\n            type: \"text\",\n            placeholder: \"Enter price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image\",\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"image\",\n            type: \"text\",\n            placeholder: \"Enter image\",\n            value: image,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"category\",\n            type: \"text\",\n            placeholder: \"Enter category\",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"brand\",\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"brand\",\n            type: \"text\",\n            placeholder: \"Enter brand\",\n            value: brand,\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"countInStock\",\n            children: \"Count In Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"countInStock\",\n            type: \"text\",\n            placeholder: \"Enter countInStock\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            rows: \"3\",\n            type: \"text\",\n            placeholder: \"Enter description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductEditScreen, \"mIETCam0wL+Xtnq3qWJLshCPJKA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/E2B/frontend/src/screens/ProductEditScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","detailsProduct","LoadingBox","MessageBox","ProductEditScreen","props","productId","match","params","id","name","setName","price","setPrice","image","setImage","category","setCategory","countInStock","setCountInStock","brand","setBrand","description","setDescription","productDetails","state","loading","error","product","dispatch","_id","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detailsProduct } from '../actions/productActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nexport default function ProductEditScreen(props) {\r\n  const productId = props.match.params.id;\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [countInStock, setCountInStock] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (!product || product._id !== productId) {\r\n      dispatch(detailsProduct(productId));\r\n    } else {\r\n      setName(product.name);\r\n      setPrice(product.price);\r\n      setImage(product.image);\r\n      setCategory(product.category);\r\n      setCountInStock(product.countInStock);\r\n      setBrand(product.brand);\r\n      setDescription(product.description);\r\n    }\r\n  }, [product, dispatch, productId]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // TODO: dispatch update product\r\n  };\r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Edit Product {productId}</h1>\r\n        </div>\r\n        {loading ? (\r\n          <LoadingBox></LoadingBox>\r\n        ) : error ? (\r\n          <MessageBox variant=\"danger\">{error}</MessageBox>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"price\">Price</label>\r\n              <input\r\n                id=\"price\"\r\n                type=\"text\"\r\n                placeholder=\"Enter price\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"image\">Image</label>\r\n              <input\r\n                id=\"image\"\r\n                type=\"text\"\r\n                placeholder=\"Enter image\"\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"category\">Category</label>\r\n              <input\r\n                id=\"category\"\r\n                type=\"text\"\r\n                placeholder=\"Enter category\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"brand\">Brand</label>\r\n              <input\r\n                id=\"brand\"\r\n                type=\"text\"\r\n                placeholder=\"Enter brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"countInStock\">Count In Stock</label>\r\n              <input\r\n                id=\"countInStock\"\r\n                type=\"text\"\r\n                placeholder=\"Enter countInStock\"\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                rows=\"3\"\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></textarea>\r\n            </div>\r\n            <div>\r\n              <label></label>\r\n              <button className=\"primary\" type=\"submit\">\r\n                Update\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}